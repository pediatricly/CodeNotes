* pandoc + bib-tex / citations + latex
  Based largely on [[https://www.youtube.com/watch?v=nO4T8JDNYG0][McDaniel YouTube]]

** [2017-01-23 Mon] Install pdfinfo
   Turned into a tangent through homebrew. I ended up uninstalling Anaconda
   but also fixed a key issue with the OS X El Cap upgrade.

*** Commented out the Anaconda line in ~/.bash_profile
    [[https://coolestguidesontheplanet.com/add-shell-path-osx/]]

*** Homebrew did not like anaconda (maybe) despite changing the $PATH
    `conda install anaconda-clean`
    `anaconda-clean`
    [[https://docs.continuum.io/anaconda/install]]

*** Deleted the Python 3.3 I had from `/Library/Frameworks/Python.framework`
    [[http://stackoverflow.com/questions/22255579/homebrew-brew-doctor-warning-about-library-frameworks-python-framework-even-wi]]
    [[https://github.com/Homebrew/legacy-homebrew/issues/27146]]

*** Apparently OS X El Capitan breaks brew among other things. The fix:
    `xcode-select --install`
    [[http://tips.tutorialhorizon.com/2015/10/01/xcrun-error-invalid-active-developer-path-library-developer-commandline-tools-missing-xcrun/]]

*** Just to clean out some seemingly useless stuff after `brew doctor`
    `brew prune`

*** Finally, installed xpdf
    `brew install homebrew/x11/xpdf`
    [[http://stackoverflow.com/questions/34771535/pdfinfo-package-for-mac-os-x]]

**** The usage is pretty simple:
     $ pdfinfo filename.pdf
     And you get basic metadata from the file.

    That SO post notes the mdls command which may prove useful as it picks up a few things 
    (eg the source URL) that pdfinfo leaves out.
    In general, I'm bummed my literature pdfs don't have more content and in 
    particular are missing the DOIs mostly.

*** Installed the [[https://github.com/vim-pandoc/vim-pandoc][vim-pandoc]] plugin 
      - Easy using Pathogen
          $ cd ~/.vim/bundle
          $ git clone git@github.com:vim-pandoc/vim-pandoc.git

** [2017-01-28 Sat] Actually get pandoc, latex et al working!
   The whole suite works like this:
   - pandoc is a command line program on its own to convert many file types
         - Most notably, it turns markdown into html or pdfs 
   - to create pdfs, pandoc needs a latex library
   - pandoc is extended by pandoc-citeproc to handle citations from a bunch
     of bibliography types
   - vim-pandoc above just makes it easier to do all that directly in vim

*** How I got it all working
    1. Installed [[http://pandoc.org/installing.html][pandoc main]]
       `brew install pandoc`
    2. Along with [[http://www.tug.org/mactex/morepackages.html][BasicTeX]], but
   then I deleted it from /usr/local/texlive and installed
   [[http://www.texts.io/support/0001/][XeLaTeX]] instead. (Not sure the
       switch mattered. They looked the same.)
       Comes as a .pkg file, so very easy
    3. Restart & pandoc worked! (Usage notes below)
    4. Then I had to figure out the cite-while-you-write function, see Usage
       below
     5. But, it turns out the essential [[https://github.com/jgm/pandoc-citeproc][pandoc-citeproc extension]] is not
        included in the basic install, so:
       1. `brew install pandoc-citeproc`
     6. Voila! Now, check the usage...

*** Usage - Citations in Vim Markdown -> Pandoc -> pdf or html
    1. mkdir your project's working directory
    2. Get a .bib (BibLaTeX) file into your working directory, i.e., where
       the text document that needs citations is.
         - Papers & ReadCube can export these. PubMed can export a few
           formats, including nbib. And the video that set all this off shows
           a Unix library that can return bibTeX from a PMID.
         - Seems .ris et al would work, too. cf pandoc user guide p 54
         - vim-pandoc looks in the working dir by default. cf vim-pandoc/doc/pandoc.txt
           g:pandoc#biblio#sources
    3. While editing the text file in vim/mvim, start with '@' then, still
       in insert mode, hit:
        1. CTRL-X
        2. CTRL-O 
        3. You should get a sweet autocomplete of all refs in the .bib
           file!
        4. Hit enter when you find the winner
    4. Stick a "#References" line at the bottom of the file as they will
       populate there when you pass it to pandoc

    5. :w
    6. :Pandoc pdf
       - And that should do it. The other way is..

    Say you're starting with the file.md with @RefTags already made. From the
         command line:
         =pandoc --filter pandoc-citeproc file.md -o output.pdf
                --bibliography library.bib=
    The same command works for html, too. Just switch to =output.html=
    
    It works! Mind blowing! Looks just like all those sweet coding
                  references.

*** More Refs
    1. There are a lot more options for handling citations in the [[http://pandoc.org/MANUAL.html][Pandoc Manual]], p54-57.
    2. [[https://github.com/jgm/pandoc-citeproc/blob/master/man/pandoc-citeproc.1.md][Pandoc-citeproc docs]]
    3. [[https://github.com/vim-pandoc/vim-pandoc/blob/master/doc/pandoc.txt][vim-pandoc docs]]


* org-mode									   :org-mode:vim:
** [2017-01-28 Sat]
   Installed [[https://github.com/jceb/vim-orgmode][org-mode]] and its
   dependents and it works!
   Documentation is always available at :orgguide

*** Dependents
    1. [[http://www.vim.org/scripts/script.php?script_id=293][Universal Text Linking]]
    2. [[http://www.vim.org/scripts/script.php?script_id=2136][Repeat]]
    3. [[http://www.vim.org/scripts/script.php?script_id=273][taglist]]
    4. [[http://www.vim.org/scripts/script.php?script_id=3465][tagbar]]
    5. [[http://www.vim.org/scripts/script.php?script_id=2120][speeddating]]
    6. [[https://github.com/mattn/calendar-vim][calendar]]
    7. [[http://www.vim.org/scripts/script.php?script_id=4168][SyntaxRange]]

*** TODO Setup emacs export, latex<2017-01-28 Sat>
    http://orgmode.org
